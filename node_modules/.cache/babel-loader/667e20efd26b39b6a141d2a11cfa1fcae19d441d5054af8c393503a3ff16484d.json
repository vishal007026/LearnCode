{"ast":null,"code":"var _jsxFileName = \"D:\\\\app\\\\src\\\\pages\\\\Practice.js\";\nimport React from 'react';\nimport { Container, Typography, Box, Paper } from '@mui/material';\nimport Editor from \"@monaco-editor/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Practice() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Practice Coding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        height: 'calc(100vh - 200px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          flex: 1,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Problem Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Write a function that takes an array of numbers and returns the sum of all positive numbers in the array.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"100%\",\n          defaultLanguage: \"javascript\",\n          defaultValue: \"// Write your code here\\nfunction sumPositiveNumbers(arr) { // Your solution\\n}\\n\",\n          theme: \"vs-dark\",\n          options: {\n            minimap: {\n              enabled: false\n            },\n            fontSize: 14\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","Container","Typography","Box","Paper","Editor","jsxDEV","_jsxDEV","Practice","maxWidth","sx","mt","mb","children","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","height","flex","p","defaultLanguage","defaultValue","theme","options","minimap","enabled","fontSize","_c","$RefreshReg$"],"sources":["D:/app/src/pages/Practice.js"],"sourcesContent":["import React from 'react';\nimport { Container, Typography, Box, Paper } from '@mui/material';\nimport Editor from \"@monaco-editor/react\";\n\nfunction Practice() {\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n        Practice Coding\n      </Typography>\n      <Box sx={{ display: 'flex', gap: 2, height: 'calc(100vh - 200px)' }}>\n        <Paper sx={{ flex: 1, p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Problem Description\n          </Typography>\n          <Typography variant=\"body1\">\n            Write a function that takes an array of numbers and returns the sum of all positive numbers in the array.\n          </Typography>\n        </Paper>\n        <Paper sx={{ flex: 1 }}>\n          <Editor\n            height=\"100%\"\n            defaultLanguage=\"javascript\"\n            defaultValue=\"// Write your code here\nfunction sumPositiveNumbers(arr) {\n  // Your solution\n}\n\"\n            theme=\"vs-dark\"\n            options={{\n              minimap: { enabled: false },\n              fontSize: 14,\n            }}\n          />\n        </Paper>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Practice;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,EAAEC,GAAG,EAAEC,KAAK,QAAQ,eAAe;AACjE,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,QAAQA,CAAA,EAAG;EAClB,oBACED,OAAA,CAACN,SAAS;IAACQ,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC5CN,OAAA,CAACL,UAAU;MAACY,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAACC,KAAK,EAAC,QAAQ;MAAAJ,QAAA,EAAC;IAEpE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbd,OAAA,CAACJ,GAAG;MAACO,EAAE,EAAE;QAAEY,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAE;MAAAX,QAAA,gBAClEN,OAAA,CAACH,KAAK;QAACM,EAAE,EAAE;UAAEe,IAAI,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAE;QAAAb,QAAA,gBAC3BN,OAAA,CAACL,UAAU;UAACY,OAAO,EAAC,IAAI;UAACE,YAAY;UAAAH,QAAA,EAAC;QAEtC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbd,OAAA,CAACL,UAAU;UAACY,OAAO,EAAC,OAAO;UAAAD,QAAA,EAAC;QAE5B;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACRd,OAAA,CAACH,KAAK;QAACM,EAAE,EAAE;UAAEe,IAAI,EAAE;QAAE,CAAE;QAAAZ,QAAA,eACrBN,OAAA,CAACF,MAAM;UACLmB,MAAM,EAAC,MAAM;UACbG,eAAe,EAAC,YAAY;UAC5BC,YAAY,EAAC,mFAIxB;UACWC,KAAK,EAAC,SAAS;UACfC,OAAO,EAAE;YACPC,OAAO,EAAE;cAAEC,OAAO,EAAE;YAAM,CAAC;YAC3BC,QAAQ,EAAE;UACZ;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAACa,EAAA,GAlCQ1B,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}