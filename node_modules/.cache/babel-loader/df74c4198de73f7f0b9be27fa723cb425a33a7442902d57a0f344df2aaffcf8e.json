{"ast":null,"code":"var _jsxFileName = \"d:\\\\app\\\\src\\\\pages\\\\Course.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Container, Typography, Card, CardContent, List, ListItem, ListItemText } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Course() {\n  _s();\n  const {\n    languageId\n  } = useParams();\n  const courseContent = {\n    python: [{\n      title: 'Introduction to Python',\n      content: 'Basic syntax and data types'\n    }, {\n      title: 'Control Flow',\n      content: 'If statements, loops, and functions'\n    }, {\n      title: 'Data Structures',\n      content: 'Lists, dictionaries, and sets'\n    }],\n    javascript: [{\n      title: 'JavaScript Basics',\n      content: 'Variables, types, and operators'\n    }, {\n      title: 'Functions & Objects',\n      content: 'Function declarations and object methods'\n    }, {\n      title: 'DOM Manipulation',\n      content: 'Selecting and modifying HTML elements'\n    }],\n    java: [{\n      title: 'Java Fundamentals',\n      content: 'Classes, objects, and methods'\n    }, {\n      title: 'Object-Oriented Programming',\n      content: 'Inheritance and polymorphism'\n    }, {\n      title: 'Exception Handling',\n      content: 'Try-catch blocks and custom exceptions'\n    }]\n  };\n  const content = courseContent[languageId] || [];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      align: \"center\",\n      children: [languageId.charAt(0).toUpperCase() + languageId.slice(1), \" Course\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: content.map((lesson, index) => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `Lesson ${index + 1}: ${lesson.title}`,\n              secondary: lesson.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Course, \"CfI7nqjXMxhEpLxZm5a+T1A76GY=\", false, function () {\n  return [useParams];\n});\n_c = Course;\nexport default Course;\nvar _c;\n$RefreshReg$(_c, \"Course\");","map":{"version":3,"names":["React","Container","Typography","Card","CardContent","List","ListItem","ListItemText","useParams","jsxDEV","_jsxDEV","Course","_s","languageId","courseContent","python","title","content","javascript","java","maxWidth","sx","mt","mb","children","variant","component","gutterBottom","align","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","map","lesson","index","primary","secondary","_c","$RefreshReg$"],"sources":["d:/app/src/pages/Course.js"],"sourcesContent":["import React from 'react';\nimport { Container, Typography, Card, CardContent, List, ListItem, ListItemText } from '@mui/material';\nimport { useParams } from 'react-router-dom';\n\nfunction Course() {\n  const { languageId } = useParams();\n\n  const courseContent = {\n    python: [\n      { title: 'Introduction to Python', content: 'Basic syntax and data types' },\n      { title: 'Control Flow', content: 'If statements, loops, and functions' },\n      { title: 'Data Structures', content: 'Lists, dictionaries, and sets' }\n    ],\n    javascript: [\n      { title: 'JavaScript Basics', content: 'Variables, types, and operators' },\n      { title: 'Functions & Objects', content: 'Function declarations and object methods' },\n      { title: 'DOM Manipulation', content: 'Selecting and modifying HTML elements' }\n    ],\n    java: [\n      { title: 'Java Fundamentals', content: 'Classes, objects, and methods' },\n      { title: 'Object-Oriented Programming', content: 'Inheritance and polymorphism' },\n      { title: 'Exception Handling', content: 'Try-catch blocks and custom exceptions' }\n    ]\n  };\n\n  const content = courseContent[languageId] || [];\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n        {languageId.charAt(0).toUpperCase() + languageId.slice(1)} Course\n      </Typography>\n      <List>\n        {content.map((lesson, index) => (\n          <Card key={index} sx={{ mb: 2 }}>\n            <CardContent>\n              <ListItem>\n                <ListItemText\n                  primary={`Lesson ${index + 1}: ${lesson.title}`}\n                  secondary={lesson.content}\n                />\n              </ListItem>\n            </CardContent>\n          </Card>\n        ))}\n      </List>\n    </Container>\n  );\n}\n\nexport default Course;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AACtG,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAW,CAAC,GAAGL,SAAS,CAAC,CAAC;EAElC,MAAMM,aAAa,GAAG;IACpBC,MAAM,EAAE,CACN;MAAEC,KAAK,EAAE,wBAAwB;MAAEC,OAAO,EAAE;IAA8B,CAAC,EAC3E;MAAED,KAAK,EAAE,cAAc;MAAEC,OAAO,EAAE;IAAsC,CAAC,EACzE;MAAED,KAAK,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAgC,CAAC,CACvE;IACDC,UAAU,EAAE,CACV;MAAEF,KAAK,EAAE,mBAAmB;MAAEC,OAAO,EAAE;IAAkC,CAAC,EAC1E;MAAED,KAAK,EAAE,qBAAqB;MAAEC,OAAO,EAAE;IAA2C,CAAC,EACrF;MAAED,KAAK,EAAE,kBAAkB;MAAEC,OAAO,EAAE;IAAwC,CAAC,CAChF;IACDE,IAAI,EAAE,CACJ;MAAEH,KAAK,EAAE,mBAAmB;MAAEC,OAAO,EAAE;IAAgC,CAAC,EACxE;MAAED,KAAK,EAAE,6BAA6B;MAAEC,OAAO,EAAE;IAA+B,CAAC,EACjF;MAAED,KAAK,EAAE,oBAAoB;MAAEC,OAAO,EAAE;IAAyC,CAAC;EAEtF,CAAC;EAED,MAAMA,OAAO,GAAGH,aAAa,CAACD,UAAU,CAAC,IAAI,EAAE;EAE/C,oBACEH,OAAA,CAACT,SAAS;IAACmB,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC5Cd,OAAA,CAACR,UAAU;MAACuB,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAACC,KAAK,EAAC,QAAQ;MAAAJ,QAAA,GAChEX,UAAU,CAACgB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGjB,UAAU,CAACkB,KAAK,CAAC,CAAC,CAAC,EAAC,SAC5D;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbzB,OAAA,CAACL,IAAI;MAAAmB,QAAA,EACFP,OAAO,CAACmB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzB5B,OAAA,CAACP,IAAI;QAAakB,EAAE,EAAE;UAAEE,EAAE,EAAE;QAAE,CAAE;QAAAC,QAAA,eAC9Bd,OAAA,CAACN,WAAW;UAAAoB,QAAA,eACVd,OAAA,CAACJ,QAAQ;YAAAkB,QAAA,eACPd,OAAA,CAACH,YAAY;cACXgC,OAAO,EAAE,UAAUD,KAAK,GAAG,CAAC,KAAKD,MAAM,CAACrB,KAAK,EAAG;cAChDwB,SAAS,EAAEH,MAAM,CAACpB;YAAQ;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC,GARLG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB;AAACvB,EAAA,CA5CQD,MAAM;EAAA,QACUH,SAAS;AAAA;AAAAiC,EAAA,GADzB9B,MAAM;AA8Cf,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}